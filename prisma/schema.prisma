generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model exercise_comments {
  id                                               String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                                       DateTime   @default(now()) @db.Timestamptz(6)
  mesocycle                                        String     @db.Uuid
  workout                                          String     @db.Uuid
  text                                             String
  continue                                         Boolean?
  exercise                                         String?    @db.Uuid
  exercises                                        exercises? @relation(fields: [exercise], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mesocycle_exercise_comments_mesocycleTomesocycle mesocycle  @relation("exercise_comments_mesocycleTomesocycle", fields: [mesocycle], references: [id], onDelete: NoAction, onUpdate: NoAction)
  workouts                                         workouts   @relation(fields: [workout], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model exercises {
  id                    String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at            DateTime                @default(now()) @db.Timestamptz(6)
  exercise_name         String?
  weighted              Boolean?
  weight_step           Decimal?                @db.Decimal
  public                Boolean?                @default(true)
  creator               String?                 @db.Uuid
  muscle_group          String?
  progression_method    String?
  exercise_comments     exercise_comments[]
  users                 users?                  @relation(fields: [creator], references: [id], onUpdate: NoAction)
  meso_exercise         meso_exercise[]
  user_exercise_metrics user_exercise_metrics[]
  workout_feedback      workout_feedback[]
  workout_set           workout_set[]

  @@index([muscle_group])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model meso_day {
  id                                             String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                                     DateTime        @default(now()) @db.Timestamptz(6)
  meso_day_name                                  String?
  day_of_week                                    String?
  mesocycle                                      String?         @db.Uuid
  mesocycle_meso_day_mesocycleTomesocycle        mesocycle?      @relation("meso_day_mesocycleTomesocycle", fields: [mesocycle], references: [id], onDelete: Cascade, onUpdate: NoAction)
  meso_exercise_meso_exercise_meso_dayTomeso_day meso_exercise[] @relation("meso_exercise_meso_dayTomeso_day")
  workouts_workouts_meso_dayTomeso_day           workouts[]      @relation("workouts_meso_dayTomeso_day")

  @@index([mesocycle])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model meso_exercise {
  id                                        String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                                DateTime   @default(now()) @db.Timestamptz(6)
  exercise                                  String?    @db.Uuid
  num_sets                                  Decimal?   @db.Decimal
  meso_day                                  String?    @db.Uuid
  sort_order                                Int?
  exercises                                 exercises? @relation(fields: [exercise], references: [id], onDelete: Restrict, onUpdate: NoAction)
  meso_day_meso_exercise_meso_dayTomeso_day meso_day?  @relation("meso_exercise_meso_dayTomeso_day", fields: [meso_day], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "public_meso_exercise_meso_day_fkey")

  @@index([exercise, meso_day])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model mesocycle {
  id                                                               String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                                                       DateTime                @default(now()) @db.Timestamptz(6)
  user                                                             String?                 @db.Uuid
  meso_name                                                        String?
  enhanced                                                         Boolean?                @default(false)
  template                                                         String?                 @db.Uuid
  start_date                                                       DateTime?               @db.Date
  end_date                                                         DateTime?               @db.Date
  current                                                          Boolean?
  exercise_comments_exercise_comments_mesocycleTomesocycle         exercise_comments[]     @relation("exercise_comments_mesocycleTomesocycle")
  meso_day_meso_day_mesocycleTomesocycle                           meso_day[]              @relation("meso_day_mesocycleTomesocycle")
  program_templates                                                program_templates?      @relation(fields: [template], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users                                                            users?                  @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user_exercise_metrics_user_exercise_metrics_mesocycleTomesocycle user_exercise_metrics[] @relation("user_exercise_metrics_mesocycleTomesocycle")
  workouts_workouts_mesocycleTomesocycle                           workouts[]              @relation("workouts_mesocycleTomesocycle")

  @@index([template])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model program_templates {
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  author        String?        @db.Uuid
  template_name String?
  public        Boolean?
  id            String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  mesocycle     mesocycle[]
  users         users?         @relation(fields: [author], references: [id], onDelete: NoAction, onUpdate: NoAction)
  template_day  template_day[]

  @@index([author])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model template_day {
  created_at                                                             DateTime                @default(now()) @db.Timestamptz(6)
  template_day_name                                                      String?
  template                                                               String?                 @db.Uuid
  id                                                                     String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  program_templates                                                      program_templates?      @relation(fields: [template], references: [id], onDelete: Cascade, onUpdate: NoAction)
  template_muscle_group_template_muscle_group_template_dayTotemplate_day template_muscle_group[] @relation("template_muscle_group_template_dayTotemplate_day")

  @@index([template])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model template_muscle_group {
  id                                                            BigInt        @id @unique @default(autoincrement())
  created_at                                                    DateTime      @default(now()) @db.Timestamptz(6)
  muscle_group                                                  String?
  sets                                                          Decimal?      @db.Decimal
  template_day                                                  String?       @db.Uuid
  template_day_template_muscle_group_template_dayTotemplate_day template_day? @relation("template_muscle_group_template_dayTotemplate_day", fields: [template_day], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([muscle_group, template_day])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_exercise_metrics {
  created_at                                           DateTime   @default(now()) @db.Timestamptz(6)
  mesocycle                                            String?    @db.Uuid
  exercise                                             String?    @db.Uuid
  metric_name                                          String?
  value                                                Float?     @db.Real
  workout                                              String?    @db.Uuid
  id                                                   String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  exercises                                            exercises? @relation(fields: [exercise], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mesocycle_user_exercise_metrics_mesocycleTomesocycle mesocycle? @relation("user_exercise_metrics_mesocycleTomesocycle", fields: [mesocycle], references: [id], onDelete: Cascade, onUpdate: NoAction)
  workouts                                             workouts?  @relation(fields: [workout], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model user_weight_history {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  user       String?   @db.Uuid
  value      Decimal?  @db.Decimal
  unit       String?
  date       DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
  users      users?    @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model users {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime              @default(now()) @db.Timestamptz(6)
  display_name        String?
  date_of_birth       DateTime?             @db.Date
  gender              String?
  updated_at          DateTime              @default(now()) @db.Timestamptz(6)
  exercises           exercises[]
  mesocycle           mesocycle[]
  program_templates   program_templates[]
  user_weight_history user_weight_history[]
  workouts            workouts[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workout_feedback {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamptz(6)
  feedback_type String
  question_type String
  value         Int?      @db.SmallInt
  workout       String    @db.Uuid
  exercise      String    @db.Uuid
  muscle_group  String
  exercise_name String?
  exercises     exercises @relation(fields: [exercise], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_workout_feedback_exercise_fkey")
  workouts      workouts  @relation(fields: [workout], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "public_workout_feedback_workout_fkey")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workout_set {
  id              BigInt     @id @default(autoincrement())
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  workout         String?    @db.Uuid
  exercise        String?    @db.Uuid
  reps            Int?
  target_reps     Int?
  target_weight   Float?     @db.Real
  weight          Float?     @db.Real
  set_num         Int?       @db.SmallInt
  is_first        Boolean    @default(false)
  is_last         Boolean    @default(false)
  completed       Boolean?   @default(false)
  set_performance Int        @default(0) @db.SmallInt
  exercises       exercises? @relation(fields: [exercise], references: [id], onDelete: Restrict)
  workouts        workouts?  @relation(fields: [workout], references: [id], onDelete: Cascade)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model workouts {
  created_at                              DateTime                @default(now()) @db.Timestamptz(6)
  user                                    String?                 @db.Uuid
  mesocycle                               String?                 @db.Uuid
  day_name                                String?
  date                                    DateTime?               @db.Timestamptz(6)
  id                                      String                  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  complete                                Boolean?                @default(false)
  meso_day                                String?                 @db.Uuid
  target_rir                              Int?                    @db.SmallInt
  deload                                  Boolean?                @default(false)
  exercise_comments                       exercise_comments[]
  user_exercise_metrics                   user_exercise_metrics[]
  workout_feedback                        workout_feedback[]
  workout_set                             workout_set[]
  meso_day_workouts_meso_dayTomeso_day    meso_day?               @relation("workouts_meso_dayTomeso_day", fields: [meso_day], references: [id], onDelete: NoAction, onUpdate: NoAction)
  mesocycle_workouts_mesocycleTomesocycle mesocycle?              @relation("workouts_mesocycleTomesocycle", fields: [mesocycle], references: [id], onDelete: Cascade, onUpdate: NoAction)
  users                                   users?                  @relation(fields: [user], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
